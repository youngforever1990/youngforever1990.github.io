<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[黄杨的技术博客]]></title>
  <link href="http://youngforever1990.github.io/atom.xml" rel="self"/>
  <link href="http://youngforever1990.github.io/"/>
  <updated>2014-08-01T15:09:13+08:00</updated>
  <id>http://youngforever1990.github.io/</id>
  <author>
    <name><![CDATA[Young]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Php Beginner]]></title>
    <link href="http://youngforever1990.github.io/blog/2014/08/01/php-beginner/"/>
    <updated>2014-08-01T00:00:00+08:00</updated>
    <id>http://youngforever1990.github.io/blog/2014/08/01/php-beginner</id>
    <content type="html"><![CDATA[<h3>php</h3>

<h4>php 脚本以&lt;?php 开头，以?></h4>

<p>&lt;?php
//此处是php代码
?></p>

<ul>
<li>$color 用来声明一个变量</li>
<li>echo用来输出类似 iOS NSlog printf 输出语句</li>
</ul>


<h4>php变量规则:</h4>

<ul>
<li>变量以$符号开头，以后是变量的名称</li>
<li>变量名称必须以字母或下划线开头</li>
<li>变量名称不能以数字开头</li>
<li>变量名称只能包含字母数字字符和下划线（A-z、0-9 以及 _）</li>
<li>变量名称对大小写敏感（$y 与 $Y 是两个不同的变量）</li>
</ul>


<h5>注释： php变量名称 对大小写敏感</h5>

<h4>php变量的创建</h4>

<ul>
<li>php 没有创建变量的命令，变量会在首次为其赋值时被创建</li>
</ul>


<h4>php变量作用域</h4>

<ul>
<li>函数之外声明的变量拥有 Global 作用域，只能在函数以外进行访问。</li>
<li>函数内部声明的变量拥有 LOCAL 作用域，只能在函数内部进行访问。</li>
</ul>


<h4>global</h4>

<ul>
<li>global 关键词用于访问函数内的全局变量。</li>
</ul>


<h4>static</h4>

<ul>
<li>通常，当函数完成/执行后，会删除所有变量。不过，有时我需要不删除某个局部变量。实现这一点需要更进一步的工作。要完成这一点，请在您首次声明变量时使用 static 关键词</li>
</ul>


<h4>echo 和 print 之间的差异</h4>

<ul>
<li>echo- 能够输出一个以上的字符串</li>
<li>print-只能输出一个字符串，并始终返回1</li>
</ul>


<h4>var_dump()返回变量的数据类型和值</h4>

<h4>php 创建对象</h4>

<pre><code>    &lt;?php
    class Car
    {
        var $color;
        function Car($color="green") {
        $this-&gt;color = $color;
        }
        function what_color(){
            return $this-&gt;color;
        }
    }
    ?&gt;
</code></pre>

<h4>php NULL 值</h4>

<p>NULL 值标示变量是否为空。也用于区分空字符串与空值数据库</p>

<h4>php 字符串函数</h4>

<pre><code>    * strlen() 字符串长度
    * strpos() 函数用于检索字符串内指定的字符或文本。
            strpos("Hello world!","world");
    *   
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Improve iOS]]></title>
    <link href="http://youngforever1990.github.io/blog/2014/07/31/how-to-improve-ios/"/>
    <updated>2014-07-31T15:38:41+08:00</updated>
    <id>http://youngforever1990.github.io/blog/2014/07/31/how-to-improve-ios</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何提高iOS]]></title>
    <link href="http://youngforever1990.github.io/blog/2014/07/31/ru-he-ti-gao-ios/"/>
    <updated>2014-07-31T15:38:28+08:00</updated>
    <id>http://youngforever1990.github.io/blog/2014/07/31/ru-he-ti-gao-ios</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何提高iOS 转自唐巧]]></title>
    <link href="http://youngforever1990.github.io/blog/2014/07/31/ru-he-ti-gao-ios-zhuan-zi-tang-qiao/"/>
    <updated>2014-07-31T15:33:59+08:00</updated>
    <id>http://youngforever1990.github.io/blog/2014/07/31/ru-he-ti-gao-ios-zhuan-zi-tang-qiao</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
